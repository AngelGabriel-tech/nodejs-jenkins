name: CI / Build & Deploy to Azure VM

on:
  push:
    branches: [main, dev]

env:
  IMAGE_NAME: nodejs-jenkins
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-jenkins:${{ github.sha }}

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            IMAGE=${{ env.IMAGE }}
            echo "Deploying $IMAGE..."

            # Ensure Docker is installed
            if ! command -v docker >/dev/null 2>&1; then
              echo 'Installing Docker...'
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER || true
            fi

            docker pull "$IMAGE"
            docker rm -f nodejs-jenkins || true
            docker run -d --name nodejs-jenkins -p 3000:3000 --restart unless-stopped "$IMAGE"
            echo 'Deployment complete.'